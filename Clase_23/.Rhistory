Datos <- read.dta("wide desc.dta")
Datos <- read_dta("wide desc.dta")
Datos <- read_dta("wide desc.dta", package = "haven")
# Activate libraries
library(tidyverse)
Datos <- read_dta("wide desc.dta", package = "haven")
Datos <- read_dta("wide desc.dta")
Datos <- read_dta(system.file("wide desc.dta", package = "haven"))
Data <- read.dta("wide desc.dta")
Data <- read.dta("wide desc 2.dta")
names(Data)
View(Data)
subset(Data, atcc == 'B01AA07' ,
select = c("id", "desc1", "desc2", "desc3", "desc4", "desc5", "desc6", "desc7",
"desc8", "desc9", "desc10", "desc11", "desc12", "desc13", "desc14",
"year", "mon", "tiempo", "atcc", "Atc", "Huerfano", "CostoUnitario",
"GastoTotal", "egresos_month", "egresos", "GastoTotal_usd", "Cantidad"))
Data_ej <- subset(Data, atcc == 'B01AA07' ,
select = c("id", "desc1", "desc2", "desc3", "desc4", "desc5", "desc6", "desc7",
"desc8", "desc9", "desc10", "desc11", "desc12", "desc13", "desc14",
"year", "mon", "tiempo", "atcc", "Atc", "Huerfano", "CostoUnitario",
"GastoTotal", "egresos_month", "egresos", "GastoTotal_usd", "Cantidad"))
View(Data_ej)
Data_ej <- subset(Data, atcc == 'S01EC01' ,
select = c("id", "desc1", "desc2", "desc3", "desc4", "desc5", "desc6", "desc7",
"desc8", "desc9", "desc10", "desc11", "desc12", "desc13", "desc14",
"year", "mon", "tiempo", "atcc", "Atc", "Huerfano", "CostoUnitario",
"GastoTotal", "egresos_month", "egresos", "GastoTotal_usd", "Cantidad"))
View(Data_ej)
Data_ej <- subset(Data, atcc == 'V07AB' ,
select = c("id", "desc1", "desc2", "desc3", "desc4", "desc5", "desc6", "desc7",
"desc8", "desc9", "desc10", "desc11", "desc12", "desc13", "desc14",
"year", "mon", "tiempo", "atcc", "Atc", "Huerfano", "CostoUnitario",
"GastoTotal", "egresos_month", "egresos", "GastoTotal_usd", "Cantidad"))
View(Data_ej)
Data_ej <- subset(Data, atcc == 'J01CA04' ,
select = c("id", "desc1", "desc2", "desc3", "desc4", "desc5", "desc6", "desc7",
"desc8", "desc9", "desc10", "desc11", "desc12", "desc13", "desc14",
"year", "mon", "tiempo", "atcc", "Atc", "Huerfano", "CostoUnitario",
"GastoTotal", "egresos_month", "egresos", "GastoTotal_usd", "Cantidad"))
View(Data_ej)
Data_ej <- subset(Data, atcc == 'C09AA01' ,
select = c("id", "desc1", "desc2", "desc3", "desc4", "desc5", "desc6", "desc7",
"desc8", "desc9", "desc10", "desc11", "desc12", "desc13", "desc14",
"year", "mon", "tiempo", "atcc", "Atc", "Huerfano", "CostoUnitario",
"GastoTotal", "egresos_month", "egresos", "GastoTotal_usd", "Cantidad"))
View(Data_ej)
View(Data)
# Volvemos serie de tiempo a la variable de interés:
Cantidad <- ts(Data_ej$Cantidad, start = c(2008, 1), frequency = 12)
# Su diferencia:
D_Cantidad = diff(Cantidad, lag = 12)
#
#****************************************************************************************
# Plotting
plot(Cantidad, type = "b", col = "darkred", ylab = "",
main = "Monthly rates of deaths due to flu in the United States")
View(Data)
as.Date(Data$tiempo)
?as.Date
as.Date(Data$tiempo, origin = "2008-01")
as.Date(Data_ej$tiempo, origin = "2008-01")
# If not yet installed:
#install.packages('foreign')
#install.packages('astsa')
#install.packages("tsDyn")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("plotly")
install.packages("hrbrthemes")
# Activate libraries
library(foreign)
library(astsa)
library(tsDyn)
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
setwd("/Users/benjaminolivavazquez/Documents/Personal/Cursos_UNAM/Tesis/Tesis_Yosef")
# Importamos todos los datos:
Data <- read.dta("wide desc 2.dta")
names(Data)
# Variable de tiempo:
Data %>%
select(year, mon) %>%
mutate(fecha = make_datetime(year, mon))
library(lubridate)
# Variable de tiempo:
Data %>%
select(year, mon) %>%
mutate(fecha = make_datetime(year, mon))
names(Data)
# Variable de tiempo:
Data %>%mutate(Data$fecha = make_datetime(year, mon))
# Variable de tiempo:
Data %>% mutate(Data$fecha = make_datetime(year, mon))
# Variable de tiempo:
Data$fecha = make_datetime(year, mon)
# Variable de tiempo:
Data$fecha = make_datetime(Data$year, Data$mon)
View(Data)
# Hacemos un subconjunto:
Data_ej <- subset(Data, atcc == 'C09AA01' ,
select = c("id", "desc1", "desc2", "desc3", "desc4", "desc5", "desc6", "desc7",
"desc8", "desc9", "desc10", "desc11", "desc12", "desc13", "desc14",
"year", "mon", "fecha", "atcc", "Atc", "Huerfano", "CostoUnitario",
"GastoTotal", "egresos_month", "egresos", "GastoTotal_usd", "Cantidad"))
# Volvemos serie de tiempo a la variable de interés:
Cantidad <- ts(Data_ej$Cantidad, start = c(2008, 1), frequency = 12)
# Su diferencia:
D_Cantidad = diff(Cantidad, lag = 12)
names(Data)
names(Data_ej)
#
#****************************************************************************************
# Plotting
p <- Data %>%
ggplot( aes(x = fecha, y = Cantidad)) +
geom_area(fill = "#69b3a2", alpha = 0.5) +
geom_line(color = "#69b3a2") +
ylab('Unidades') +
theme_ipsum()
p <- ggplotly(p)
p
#
#****************************************************************************************
# Plotting
p <- Data %>%
ggplot( aes(x = fecha, y = Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') +
theme_ipsum()
p <- ggplotly(p)
p
plot(Cantidad, type = "b", col = "darkred", ylab = "",
main = "Monthly rates of deaths due to flu in the United States")
#
#****************************************************************************************
# Plotting
p <- Data_ej %>%
ggplot( aes(x = fecha, y = Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') +
theme_ipsum()
p <- ggplotly(p)
p
#
#****************************************************************************************
# Plotting
p <- Data_ej %>%
ggplot( aes(x = fecha, y = Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') +
theme_ipsum() +
labs(
title = "Gasto en servicios de análisis clínicos en laboratorios",
subtitle = "Relación entre el porcentaje de hogares y porcentaje de gasto",
caption = "Fuente: Elaboración propia con información de INEGI - ENIGH, levantamientos \n2006, 2008, 2010, 2012, 2014 y 2016. Incluye: Servicios de análisis clínicos y \nestudios médicos (consulta externa y servicios durante el embarazo)"
)
p <- ggplotly(p)
p
#
#****************************************************************************************
# Plotting
p <- Data_ej %>%
ggplot( aes(x = fecha, y = Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
p <- ggplotly(p)
p
#
#****************************************************************************************
# Plotting
p <- Data_ej %>%
ggplot( aes(x = fecha, y = Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') + xlab('Fecha') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
p <- ggplotly(p)
p
# Plotting Diff
p <- Data_ej %>%
ggplot( aes(x = fecha, y = D_Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') + xlab('Fecha') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
p <- ggplotly(p)
# Plotting Diff
p <- Data_ej %>%
ggplot( aes(x = fecha[2: ], y = D_Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') + xlab('Fecha') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
#
#****************************************************************************************
# Plotting Levels
p <- Data_ej %>%
ggplot( aes(x = fecha, y = Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') + xlab('Fecha') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
p <- ggplotly(p)
p
# Plotting Diff
p <- Data_ej %>%
ggplot( aes(x = fecha[2: ], y = D_Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') + xlab('Fecha') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
Data_ej$fecha[1:2]
Data_ej$fecha[2:]
Data_ej$fecha[2: ]
Data_ej$fecha[2 : 144]
Data_ej$
# Plotting Diff
p <- Data_ej %>%
ggplot( aes(x = fecha[2 : 144], y = D_Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') + xlab('Fecha') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
p <- ggplotly(p)
p
# Plotting Diff
p <- Data_ej %>%
ggplot( aes(x = fecha[13 : 144], y = D_Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') + xlab('Fecha') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
p <- ggplotly(p)
#
#****************************************************************************************
# Plotting Levels
p <- Cantidad %>%
ggplot( aes(y = Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') + xlab('Fecha') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
p <- ggplotly(p)
names(Cantidad)
Cantidad
len(Cantidad)
#
#****************************************************************************************
# Plotting Levels
p <- Data_ej %>%
ggplot( aes(x = fecha, y = Cantidad)) +
geom_line(color = "#69b3a2") +
ylab('Unidades') + xlab('Fecha') +
theme_ipsum() +
labs(
title = "Cantidad comprada de ...")
p <- ggplotly(p)
p
# Volvemos serie de tiempo a la variable de interés:
Cantidad <- ts(Data_ej$Cantidad, start = c(2008, 1), frequency = 12)
table = ts.intersect(Cantidad,
lag1 = lag(Cantidad, -1),
lag2 = lag(Cantidad, -2),
lag3 = lag(Cantidad, -3),
lag4 = lag(Cantidad, -4))
?lag
library(stats)
table = ts.intersect(Cantidad,
lag1 = lag(Cantidad, -1),
lag2 = lag(Cantidad, -2),
lag3 = lag(Cantidad, -3),
lag4 = lag(Cantidad, -4))
lag(Cantidad, -1)
lag(Data_ej$Cantidad, -1)
lag(Data_ej$Cantidad, 1)
Cantidad
table = ts.intersect(Cantidad,
lag1 = lag(Cantidad, 1),
lag2 = lag(Cantidad, 2),
lag3 = lag(Cantidad, 3),
lag4 = lag(Cantidad, 4))
table = ts.intersect(Data_ej$Cantidad,
lag1 = lag(Data_ej$Cantidad, 1),
lag2 = lag(Data_ej$Cantidad, 2),
lag3 = lag(Data_ej$Cantidad, 3),
lag4 = lag(Data_ej$Cantidad, 4))
table = ts.intersect(Data_ej$Cantidad,
lag1 = lag(Data_ej$Cantidad, 1),
lag2 = lag(Data_ej$Cantidad, 2),
lag3 = lag(Data_ej$Cantidad, 3),
lag4 = lag(Data_ej$Cantidad, 4))
?setar
p
#
#****************************************************************************************
# Plotting
plot(flu, type = "b", col = "darkred", ylab = "",
main = "Monthly rates of deaths due to flu in the United States")
plot(D_flu, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
table = ts.intersect(D_flu,
lag1 = lag(D_flu, -1),
lag2 = lag(D_flu, -2),
lag3 = lag(D_flu, -3),
lag4 = lag(D_flu, -4))
x = table[, 1]
P = table[, 2:5]
c = .05 ## Threshold value
p
?setar
Cantidad_4_2500 <- setar(Cantidad, m = 4, th = 2500)
summary(Cantidad_4_2500)
plot(Cantidad_4_2500)
?setar
p
Cantidad_4_2500 <- setar(Cantidad, m = 4, thDelay = 1, th = 2500)
summary(Cantidad_4_2500)
plot(Cantidad_4_2500)
Cantidad_4 <- setar(Cantidad, m = 4, thDelay = 0)
summary(Cantidad_4)
plot(Cantidad_4)
flu <- read.delim("flu.txt")
setwd("/Users/benjaminolivavazquez/Documents/Personal/Cursos_UNAM/SERIES_2021-I/Series-de-Tiempo-Fall2020/Clase_25")
flu <- read.delim("flu.txt")
flu <- ts(flu)
D_flu = diff(flu, lag = 1)
#
#****************************************************************************************
# Plotting
plot(flu, type = "b", col = "darkred", ylab = "",
main = "Monthly rates of deaths due to flu in the United States")
plot(D_flu, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
D_flu_tar4_05 <- setar(D_flu, m = 4, thDelay = 0, th = 0.05)
summary(D_flu_tar4_05)
plot(D_flu_tar4_05)
D_flu_tar4 <- setar(D_flu, m = 4, thDelay = 0)
D_flu_tar4 <- setar(D_flu, m = 4, thDelay = 0)
D_flu_tar4_05 <- setar(D_flu, m = 4, thDelay = 0, th = 0.05)
summary(D_flu_tar4_05)
plot(D_flu_tar4_05)
D_flu_tar4 <- setar(D_flu, m = 4, thDelay = 0)
summary(D_flu_tar4)
plot(D_flu_tar4)
4*(144/100)^(1/4)
D_Cantidad <- dif(Cantidad, 1)
D_Cantidad <- diff(Cantidad, 1)
D_Cantidad
# NIVELES:
summary(ur.df(Cantidad, type = "trend", lags = 4))
library(urca)
# NIVELES:
summary(ur.df(Cantidad, type = "trend", lags = 4))
summary(ur.df(Cantidad, type = "drift", lags = 4))
summary(ur.df(Cantidad, type = "none", lags = 4))
# DIFERENCIAS:
summary(D_Cantidad, type = "trend", lags = 4))
# DIFERENCIAS:
summary(ur.df(D_Cantidad, type = "trend", lags = 4))
# NIVELES:
summary(ur.pp(Cantidad, type = "Z-tau", model = "trend", use.lag = 4))
summary(ur.pp(Cantidad, type = "Z-tau", model = "constant", use.lag = 4))
# DIFERENCIAS:
summary(ur.pp(D_Cantidad, type = "Z-tau", model = "trend", use.lag = 4))
summary(ur.pp(D_Cantidad, type = "Z-tau", model = "constant", use.lag = 4))
summary(ur.kpss(Cantidad, type = "tau"))
summary(ur.kpss(Cantidad, type = "mu"))
summary(ur.kpss(D_Cantidad, type = "tau", use.lag = 4))
summary(ur.kpss(D_Cantidad, type = "mu", use.lag = 4))
library(astsa)
library(tsDyn)
#
#****************************************************************************************
# Data:
# Monthly rates of deaths due to flu in the United States for 11 years
setwd("/Users/benjaminolivavazquez/Documents/Personal/Cursos_UNAM/SERIES_2021-I/Series-de-Tiempo-Fall2020/Clase_25")
flu <- read.delim("flu.txt")
flu <- ts(flu)
D_flu = diff(flu, lag = 1)
#
#****************************************************************************************
# Plotting
plot(flu, type = "b", col = "darkred", ylab = "",
main = "Monthly rates of deaths due to flu in the United States")
plot(D_flu, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
#
#****************************************************************************************
# Primer aproximación:
table = ts.intersect(D_flu,
lag1 = lag(D_flu, -1),
lag2 = lag(D_flu, -2),
lag3 = lag(D_flu, -3),
lag4 = lag(D_flu, -4))
x = table[, 1]
P = table[, 2:5]
c = .05 ## Threshold value
##Regression for values below the threshold
less = (P[,1] < c)
x1 = x[less]
P1 = P[less,]
out1 = lm(x1 ~ P1[,1] + P1[,2] + P1[,3] + P1[,4])
summary(out1)
##Regression for values above the threshold
greater = (P[,1]>=c)
x2 = x[greater]
P2 = P[greater,]
out2 = lm(x2 ~ P2[,1] + P2[,2] + P2[,3] + P2[,4])
summary(out2)
##Residuals
res1 = residuals(out1)
res2 = residuals(out2)
less[less==1] = res1
greater[greater==1] = res2
resid = less + greater
acf2(resid)
##Predicted values
less = (P[,1] < c)
greater = (P[,1] >= c)
fit1 = predict(out1)
fit2 = predict(out2)
less[less==1] = fit1
greater[greater==1] = fit2
fit = less + greater
plot(D_flu, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
lines(fit, col = "darkblue", lty="dashed")
#
#****************************************************************************************
# The tsDyn package in R has simplified this code into a handful of steps:
?setar
D_flu_tar4_05 <- setar(D_flu, m = 4, thDelay = 0, th = 0.05)
summary(D_flu_tar4_05)
plot(D_flu_tar4_05)
# If we do not provide a threshold to the th option,
# setar searches over a grid to choose a threshold ~ 0.038:
D_flu_tar4 <- setar(D_flu, m = 4, thDelay = 0)
summary(D_flu_tar4)
plot(D_flu_tar4)
#
plot(D_flu_tar4)
?setar
knitr::opts_chunk$set(echo = TRUE)
#install.packages('astsa')
#install.packages("tsDyn") #if not yet installed
#
library(astsa)
library(tsDyn)
flu <- read.delim("flu.txt")
head(flu)
flu <- ts(flu)
D_flu = diff(flu, lag = 1)
plot(flu, type = "b", col = "darkred", ylab = "",
main = "Monthly rates of deaths due to flu in the United States")
plot(D_flu, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
table = ts.intersect(D_flu,
lag1 = lag(D_flu, -1),
lag2 = lag(D_flu, -2),
lag3 = lag(D_flu, -3),
lag4 = lag(D_flu, -4))
table
x = table[, 1]
P = table[, 2:5]
c = .05 ## Threshold value
less = (P[,1] < c)
x1 = x[less]
P1 = P[less,]
x1
P1
out1 = lm(x1 ~ P1[,1] + P1[,2] + P1[,3] + P1[,4])
summary(out1)
greater = (P[,1]>=c)
x2 = x[greater]
P2 = P[greater,]
out2 = lm(x2 ~ P2[,1] + P2[,2] + P2[,3] + P2[,4])
summary(out2)
res1 = residuals(out1)
res2 = residuals(out2)
less[less==1] = res1
greater[greater==1] = res2
resid = less + greater
acf2(resid)
less = (P[,1] < c)
greater = (P[,1] >= c)
fit1 = predict(out1)
fit2 = predict(out2)
less[less==1] = fit1
greater[greater==1] = fit2
fit = less + greater
plot(D_flu, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
lines(fit, col = "darkblue", lty="dashed")
#?setar
D_flu_tar4_05 <- setar(D_flu, m = 4, thDelay = 0, th = 0.05)
summary(D_flu_tar4_05)
plot(D_flu_tar4_05)
