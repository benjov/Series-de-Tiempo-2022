B
?rnorm
A = rnorm(100, 35, 23)
B = sample(A, 10, replace = TRUE)
B
A = rnorm(100, 35, 4)
B = sample(A, 10, replace = TRUE)
B
mean(B)
round(B)
B = round(B)
C = mean(B)
c
C
D = B - C
D
D*D
E = D*D
e
E
sum(E)
sum(E)/9
sqrt(sum(E)/9)
#install.packages("devtools")
#install.packages("ggplot2")
#install.packages("gganimate")
#install.packages("ggalt")
#install.packages("scales")
#install.packages("readxl")
#install.packages("dplyr")
#install.packages("ggrepel")
#
#devtools::install_github("thomasp85/gganimate", force = TRUE)
library(ggplot2)
P = (3,3,7,6,10,15,16,13,9,15,9)
P = c(3,3,7,6,10,15,16,13,9,15,9)
P
Q = c(18,16,17,12,15,15,4,13,11,6,8)
UNO = c(1,1,1,1,1,1,1,1,1,1,1)
X = cbind(UNO, P)
X
t(X)
t(X)%*%Q
ggplot(aes(x=P, y=Q)) + geom_point()
df = data.frame(P, Q)
df
ggplot(df, aes(x=P, y=Q)) + geom_point()
X
Q
(t(X)%*%X)%*%t(X)%*%Q
solve(t(X)%*%X)%*%t(X)%*%Q
ggplot(df, aes(x=P, y=Q)) + geom_point() + geom_abline(intercept = 18.3977, slope = -0.6356, color="darkblue", linetype="dashed", size=1.5)
ggplot(df, aes(x=P, y=Q)) + geom_point() + geom_abline(intercept = 18.3977, slope = -0.6356, color="darkblue", linetype="dashed", size=1)
ggplot(df, aes(x=P, y=Q)) + geom_point() + geom_abline(intercept = 18.3977, slope = -0.6356, color="darkblue", linetype="dashed", size=0.5)
ggplot(df, aes(x=P, y=Q)) + geom_point() + geom_abline(intercept = 18.3977, slope = -0.6356, color="darkblue", size=1)
ggplot(df, aes(x=P, y=Q)) + geom_point() + geom_abline(intercept = 18.3977, slope = -0.6356, color="darkblue", size=0.8)
eq = paste0("Q = ", 18.3977, -0.6356, "P")
ggplot(df, aes(x=P, y=Q)) + geom_point() + geom_abline(intercept = 18.3977, slope = -0.6356, color="darkblue", size=0.8) + ggtitle(eq)
Z = (1650−1488)/sqrt(((93*93)/4)+((78*78)/4))
Z = (1650-1488)/sqrt(((93*93)/4)+((78*78)/4))
Z
Z = (1650-1488)/sqrt(((93*93)/4)+((78*78)/4))
(1.697-1.684)/2
(1.697+1.684)/2
2/(9/6)
T = sqrt(((129)*(2162^2) + (79)*(1961^2))/(208))
T
SS = sqrt(((129)*(2162^2) + (79)*(1961^2))/(208))
SS
T = (9017-5853)/(2087.939*sqrt((1/130)+(1/80)))
T
Z = (12.20-13.20)/(2.50/sqrt(40))
Z
Z = (70 - (100*0.67))/(100*0.67*(1 - 0.67))
Z
Z = (20 - (100*0.15))/(100*0.15*(1 - 0.15))
Z
Z = (192 - (300*0.67))/(300*0.67*(1 - 0.67))
Z
X = (7*0.018)/0.4
X
0.003/0.001
12.7/26.4
SS = sqrt(((13)*(12.7) + (9)*(14.9))/(22))
SS
SS = sqrt(((13)*(12.7) + (9)*(26.4))/(22))
SS
T = (9017-5853)/(SS*sqrt((1/130)+(1/80)))
T
T = (16.2-14.9)/(SS*sqrt((1/14)+(1/10)))
T
SS = sqrt(((3)*(93^2) + (3)*(78^2))/(6))
SS
T = (1650-1488)/(SS*sqrt((1/4)+(1/4)))
T
2162^2
1961^2
26.4/12.7
(2162^2)/(1961^2)
Y = c(4, 9, 10, 14, 4, 7, 12, 22, 1, 17)
t(Y)*Y
Y
Y*t(Y)
X = cbind(UNO, P)
t(X)%*%Q
Y%*%t(Y)
t(Y)%*%Y
Y = c(4, 9, 10, 14, 4, 7, 12, 22, 1, 17)
X = c(31, 58, 65, 73, 37, 44, 60, 91, 21, 84)
UNO = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
X = cbind(UNO, X)
solve(t(X) %*% X) %*% t(X) %*% Y
Y = ln(Y)
?log
Y = log(Y, base = exp(1))
X = c(31, 58, 65, 73, 37, 44, 60, 91, 21, 84)
X = log(X, base = exp(1))
X = cbind(UNO, X)
solve(t(X) %*% X) %*% t(X) %*% Y
X
Y
solve(t(X) %*% X) %*% t(X) %*% Y
Beta = solve(t(X) %*% X) %*% t(X) %*% Y
Sigma2 = t(Y) %*% Y - 2 * t(Beta) %*% t(X) %*% Y + t(Beta) %*% t(X) %*% X %*% Beta
View(Sigma2)
View(Sigma2)
Sigma2/8
solve(t(X) %*% X)
Sigma2 = (t(Y) %*% Y - 2 * t(Beta) %*% t(X) %*% Y + t(Beta) %*% t(X) %*% X %*% Beta)/8
Sigma2
Beta
sqrt(Sigma2*7.980981)
-5.440107/0.576707
sqrt(Sigma2*0.5067785)
1.893438/0.1453236
X[: , 2]
X(: , 2)
X[1]
X[2]
X[, 2]
plot(X[ , 2], Y)
Beta
exp(-5.440107 + 1.893438*20)
exp(-5.440107 + 1.893438*log(20, base = exp(1)))
log(20, base = exp(1))
exp(-5.440107 + 1.893438*log(22, base = exp(1)))
(-5.440107 + 1.893438*log(22, base = exp(1)))
(-5.440107 + 1.893438*log(20, base = exp(1)))
log(1)
log(20)
log(20)*1.893438
View(X)
Y = c(31, 58, 65, 73, 37, 44, 60, 91, 21, 84)
X = c(4, 9, 10, 14, 4, 7, 12, 22, 1, 17)
X = log(X, base = exp(1))
Y = log(Y, base = exp(1))
X = cbind(UNO, X)
View(X)
Beta = solve(t(X) %*% X) %*% t(X) %*% Y
View(Beta)
Sigma2 = (t(Y) %*% Y - 2 * t(Beta) %*% t(X) %*% Y + t(Beta) %*% t(X) %*% X %*% Beta)/8
View(Sigma2)
Beta
Sigma2*8
Sigma2
Beta
XX = solve(t(X) %*% X)
XX
sqrt(Sigma2*0.6544670)
sqrt(Sigma2*0.1349948)
2.9213083/0.6544670
0.5043708/0.1349948
exp(2.9213083 + 0.5043708*log(20, base = exp(1)))
?matrix
c(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32 & 950.71 & 6760.37 & 639.99 & 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58)
matrix(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32 & 950.71 & 6760.37 & 639.99 & 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58)
matrix(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32 & 950.71, 6760.37 & 639.99 & 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58)
matrix(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32, 950.71, 6760.37 & 639.99 & 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58)
matrix(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32, 950.71, 6760.37, 639.99 & 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58)
matrix(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32, 950.71, 6760.37, 639.99, 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58)
matrix(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32, 950.71, 6760.37, 639.99, 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58)
matrix( c(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32, 950.71, 6760.37, 639.99, 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58), nrow=5)
M = matrix( c(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32, 950.71, 6760.37, 639.99, 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58), nrow=5)
M[ c(2:5), c(2:5)]
M = matrix( c(722.36, 250.08, 2013.32, 170.94, 799.11, 250.08, 145, 950.71, 97.39, 465.29, 2013.32, 950.71, 6760.37, 639.99, 3034.01, 170.94, 97.39, 639.99, 67.61, 314.63, 799.11, 465.29, 3034.01, 314.63, 1511.58), nrow=5)
XX = M[ c(2:5), c(2:5)]
M[ c(2:5), 1]
M[ 1, c(2:5)]
XY = M[ c(2:5), 1]
XY = t(M[ c(2:5), 1])
XY = t(M[ 1, c(2:5) ])
XY = (M[ 1, c(2:5) ])
XY = c(250.08, 2013.32, 170.94, 799.11)
XY = matrix(c(250.08, 2013.32, 170.94, 799.11), nrow=4)
Beta = solve(XX) %*% XY
Beta
Sigma2 = (722.36 - 2 * t(Beta) %*% XY + t(Beta) %*% XX %*% Beta)/145
Sigma2
Sigma2 = (722.36 - 2 * t(Beta) %*% XY + t(Beta) %*% XX %*% Beta)/141
Sigma2
solve(XX)
sqrt(Sigma2*0.76831766)
sqrt(Sigma2*0.001975969)
sqrt(Sigma2*0.517117619)
sqrt(Sigma2*0.2817871)
-4.6539661 / 0.3434763
0.7209163 / 0.01741873
0.4814452 / 0.2817871
0.4140101 / 0.2080113
R = c(0, 0, 1, 1)
R %*% solve(XX) %*% t(R)
t(R) %*% solve(XX) %*% R
Sigma2 * t(R) %*% solve(XX) %*% R
sqrt(Sigma2 * t(R) %*% solve(XX) %*% R)
(0.4814452 + 0.4140101 − 1) / sqrt(Sigma2 * t(R) %*% solve(XX) %*% R)
(0.4814452 + 0.4140101 - 1) / sqrt(Sigma2 * t(R) %*% solve(XX) %*% R)
library(ggplot2)
#library(gganimate)
library(ggalt)
library(scales)
library(readxl)
library(dplyr)
library(ggrepel)
#****************************************************************************************
install.packages("maptools")
#devtools::install_github("thomasp85/gganimate", force = TRUE)
library(maptools)
library(spdep)
install.packages("spdep")
#devtools::install_github("thomasp85/gganimate", force = TRUE)
library(maptools)
library(spdep)
install.packages("spdep")
#devtools::install_github("thomasp85/gganimate", force = TRUE)
library(maptools)
library(spdep)
install.packages("spdep")
# Series de Tiempo, Septiembre de 2020
# Clase 9. Aplicacion ARIMA(p, d, q) y ARMA(p, q)
#****************************************************************************************
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("readxl")
#install.packages(stats)
#
library(ggplot2)
library(dplyr)
library(readxl)
library(stats)
#
#****************************************************************************************
setwd("/Users/benjaminolivavazquez/Documents/Personal/Cursos_UNAM/SERIES_2021-I/Series-de-Tiempo-Fall2020/Clase_9")
getwd()
#****************************************************************************************
Datos <- read_excel("Base_Transporte_ARIMA.xlsx", sheet = "Datos", col_names = TRUE)
View(Datos)
source("arroots.R")
source("maroots.R")
source("plot.armaroots.R")
Pax_Nal <- ts(Datos$Pax_Nal,
start = c(2000, 1),
freq = 12)
LPax_Nal <- ts(log(Datos$Pax_Nal),
start = c(2000, 1),
freq = 12)
DLPax_Nal <- ts(log(Datos$Pax_Nal) - lag(log(Datos$Pax_Nal), k = 1),
start = c(2000, 1),
freq = 12)
D_Ene <- ts(Datos$D_Ene,
start = c(2000, 1),
freq = 12)
D_Feb <- ts(Datos$D_Feb,
start = c(2000, 1),
freq = 12)
D_Jul <- ts(Datos$D_Jul,
start = c(2000, 1),
freq = 12)
D_Dic <- ts(Datos$D_Dic,
start = c(2000, 1),
freq = 12)
D_May2009 <- ts(Datos$D_May2009,
start = c(2000, 1),
freq = 12)
D_Jun2009 <- ts(Datos$D_Jun2009,
start = c(2000, 1),
freq = 12)
par(mfrow=c(3,1))
plot(Pax_Nal, xlab = "Tiempo", ylab = "Pasajeros",
main = "Pasajeros en vuelos nacionales de salida",
col = "darkgreen")
plot(LPax_Nal, xlab = "Tiempo", ylab = "LN Pasajeros",
main = "LN Pasajeros en vuelos nacionales de salida",
col = "darkblue")
plot(DLPax_Nal, xlab = "Tiempo",  ylab = "DLN Pasajeros",
main = "Diff LN Pasajeros en vuelos nacionales de salida",
col = "darkred")
par(mfrow=c(1,1))
ARMA_DLPax_Nal <- arima(DLPax_Nal, order = c(1, 0, 1),
xreg = cbind(D_Ene, D_Feb, D_Jul, D_Dic),
method = "ML")
ARMA_DLPax_Nal
plot(ARMA_DLPax_Nal$residuals,
main = "Residuales de un ARIMA LN Pasajeros en vuelos nacionales de salida",
col = "darkblue",
ylab = "Residuals ARMA(1, 1)")
par(mfrow=c(1,2))
plot.armaroots(arroots(ARMA_DLPax_Nal),
main="Inverse AR roots of \nAR(p): LN PAx Nal")
plot.armaroots(maroots(ARMA_DLPax_Nal),
main="Inverse MA roots of \nMA(q): LN PAx Nal")
par(mfrow=c(1,1))
acf(DLPax_Nal[2:234], lag.max = 12,
xlab = "Rezagos",
main = "Diff LN Pasajeros Nacionales")
par(mfrow=c(1,2))
acf(DLPax_Nal[2:234], lag.max = 12,
xlab = "Rezagos",
main = "Diff LN Pasajeros Nacionales")
pacf(DLPax_Nal[2:234], lag.max = 12,
xlab = 'Rezagos',
main = "Diff LN Pasajeros Nacionales")
par(mfrow=c(1,1))
acf(LPax_Nal[2:234], lag.max = 12,
xlab = "Rezagos",
main = "Diff LN Pasajeros Nacionales")
acf(LPax_Nal[2:234], lag.max = 20,
xlab = "Rezagos",
main = "Diff LN Pasajeros Nacionales")
par(mfrow=c(3,1))
plot(Pax_Nal, xlab = "Tiempo", ylab = "Pasajeros",
main = "Pasajeros en vuelos nacionales de salida",
col = "darkgreen")
plot(LPax_Nal, xlab = "Tiempo", ylab = "LN Pasajeros",
main = "LN Pasajeros en vuelos nacionales de salida",
col = "darkblue")
plot(DLPax_Nal, xlab = "Tiempo",  ylab = "DLN Pasajeros",
main = "Diff LN Pasajeros en vuelos nacionales de salida",
col = "darkred")
par(mfrow=c(1,1))
source("Lag_Opt_ARIMA_Exog.R")
# CON variables exogenas:
Lag_Opt_ARIMA_Exog(p_max = 6, q_max = 6,
X_t = DLPax_Nal,
Ex = 1,
Z_t = cbind(D_Ene, D_Feb, D_Jul, D_Dic))
# SIN variables exogenas:
Lag_Opt_ARIMA_Exog(p_max = 6, q_max = 6,
X_t = DLPax_Nal,
Ex = 0,
Z_t = cbind(D_Ene, D_Jul, D_Dic))
ARMA_Ex_DLPax_Nal <- arima(DLPax_Nal, order = c(4, 0, 6),
xreg = cbind(D_Ene, D_Feb, D_Jul, D_Dic),
method = "ML")
ARMA_Ex_DLPax_Nal
plot(ARMA_Ex_DLPax_Nal$residuals,
ylab = "",
main = "Residuales ARMA Diff LN Pasajeros Nacionales",
col = "darkblue")
# CON variables exogenas rezagos optimos:
Lag_Opt_ARIMA_Exog(p_max = 6, q_max = 6,
X_t = DLPax_Nal,
Ex = 1,
Z_t = cbind(D_Ene, D_Feb, D_Jul, D_Dic, D_May2009, D_Jun2009))
ARMA_Ex_DLPax_Nal_2 <- arima(DLPax_Nal, order = c(4, 0, 6),
xreg = cbind(D_Ene, D_Feb, D_Jul, D_Dic, D_May2009, D_Jun2009),
method = "ML")
ARMA_Ex_DLPax_Nal_2
plot(ARMA_Ex_DLPax_Nal_2$residuals,
ylab = "",
main = "Residuales ARMA Diff LN Pasajeros Nacionales",
col = "darkblue")
par(mfrow=c(1,2))
plot.armaroots(arroots(ARMA_Ex_DLPax_Nal_2),
main="Inverse AR roots of \nAR(p): LN PAx Nal")
plot.armaroots(maroots(ARMA_Ex_DLPax_Nal_2),
main="Inverse MA roots of \nMA(q): LN PAx Nal")
par(mfrow=c(1,1))
-0.1472  -1.3323  +0.1201  +1.3142  -0.1034 -0.3864
knitr::opts_chunk$set(echo = TRUE)
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("readxl")
#install.packages(stats)
#
library(ggplot2)
library(dplyr)
library(readxl)
library(stats)
Datos <- read_excel("Base_Transporte_ARIMA.xlsx", sheet = "Datos", col_names = TRUE)
head(Datos)
Pax_Nal <- ts(Datos$Pax_Nal,
start = c(2000, 1),
freq = 12)
LPax_Nal <- ts(log(Datos$Pax_Nal),
start = c(2000, 1),
freq = 12)
DLPax_Nal <- ts(log(Datos$Pax_Nal) - lag(log(Datos$Pax_Nal), k = 1),
start = c(2000, 1),
freq = 12)
D_Mar2020	<- ts(Datos$D_Mar2020,
start = c(2000, 1),
freq = 12)
D_Abr2020	<- ts(Datos$D_Abr2020,
start = c(2000, 1),
freq = 12)
D_Jun2020	<- ts(Datos$D_Jun2020,
start = c(2000, 1),
freq = 12)
D_Jul2020 <- ts(Datos$D_Jul2020,
start = c(2000, 1),
freq = 12)
D_Mar2021 <- ts(Datos$D_Mar2021,
start = c(2000, 1),
freq = 12)
D_Ene <- ts(Datos$D_Ene,
start = c(2000, 1),
freq = 12)
D_Feb <- ts(Datos$D_Feb,
start = c(2000, 1),
freq = 12)
D_Jul <- ts(Datos$D_Jul,
start = c(2000, 1),
freq = 12)
D_Dic <- ts(Datos$D_Dic,
start = c(2000, 1),
freq = 12)
par(mfrow=c(3,1))
plot(Pax_Nal, xlab = "Tiempo", ylab = "Pasajeros",
main = "Pasajeros en vuelos nacionales de salida",
col = "darkgreen")
plot(LPax_Nal, xlab = "Tiempo", ylab = "LN Pasajeros",
main = "LN Pasajeros en vuelos nacionales de salida",
col = "darkblue")
plot(DLPax_Nal, xlab = "Tiempo",  ylab = "DLN Pasajeros",
main = "Diff LN Pasajeros en vuelos nacionales de salida",
col = "darkred")
par(mfrow=c(1,1))
ARMA_Ex_DLPax_Nal_2 <- arima(DLPax_Nal, order = c(6, 0, 6),
xreg = cbind(D_Ene, D_Feb, D_Jul, D_Dic, D_Mar2020, D_Abr2020, D_Jun2020, D_Jul2020, D_Mar2021),
method = "ML")
ARMA_Ex_DLPax_Nal_2
Predict_Datos <- read_excel("Predict_Base_Transporte_ARIMA.xlsx", sheet = "Datos", col_names = TRUE)
head(Predict_Datos)
D_Mar2020_f	<- ts(Predict_Datos$D_Mar2020,
start = c(2022, 7),
freq = 12)
D_Abr2020_f	<- ts(Predict_Datos$D_Abr2020,
start = c(2022, 7),
freq = 12)
D_Jun2020_f	<- ts(Predict_Datos$D_Jun2020,
start = c(2022, 7),
freq = 12)
D_Jul2020_f <- ts(Predict_Datos$D_Jul2020,
start = c(2022, 7),
freq = 12)
D_Mar2021_f <- ts(Predict_Datos$D_Mar2021,
start = c(2022, 7),
freq = 12)
D_Ene_f <- ts(Predict_Datos$D_Ene,
start = c(2022, 7),
freq = 12)
D_Feb_f <- ts(Predict_Datos$D_Feb,
start = c(2022, 7),
freq = 12)
D_Jul_f <- ts(Predict_Datos$D_Jul,
start = c(2022, 7),
freq = 12)
D_Dic_f <- ts(Predict_Datos$D_Dic,
start = c(2022, 7),
freq = 12)
predict(ARMA_Ex_DLPax_Nal_2, n.ahead = 24,
newxreg = cbind(D_Ene_f, D_Feb_f, D_Jul_f, D_Dic_f,
D_Mar2020_f, D_Abr2020_f, D_Jun2020_f, D_Jul2020_f, D_Mar2021_f))
DLPax_Nal_f <- predict(ARMA_Ex_DLPax_Nal_2, n.ahead = 24,
newxreg = cbind(D_Ene_f, D_Feb_f, D_Jul_f, D_Dic_f,
D_Mar2020_f, D_Abr2020_f, D_Jun2020_f, D_Jul2020_f, D_Mar2021_f))
names(DLPax_Nal_f)
Pronostico_Arima <- read_excel("Pronostico_Arima.xlsx", sheet = "Datos", col_names = TRUE)
Pronostico_Arima$Pax_Nal_f <- Pronostico_Arima$Pax_Nal
for(i in 1:24){
Pronostico_Arima$Pax_Nal_f[259 + i] <-
Pronostico_Arima$Pax_Nal_f[259 + i - 1]*(1 + DLPax_Nal_f$pred[i])
}
View(Pronostico_Arima)
Pronostico_Arima <- read_excel("Pronostico_Arima.xlsx", sheet = "Datos", col_names = TRUE)
Pronostico_Arima$Pax_Nal_f <- Pronostico_Arima$Pax_Nal
for(i in 1:24){
Pronostico_Arima$Pax_Nal_f[259 + i] <-
Pronostico_Arima$Pax_Nal_f[259 + i - 1]*(1 + DLPax_Nal_f$pred[i])
}
View(Pronostico_Arima)
options(scipen = 999) # NO notacion cientifica
ggplot(data = Pronostico_Arima, aes(x = Periodo)) +
geom_line(aes(y = Pax_Nal_f, color = "Pax_Nal_f")) +
geom_line(aes(y = Pax_Nal, color = "Pax_Nal")) +
scale_color_brewer(type = "qual", palette = 2) +
#theme_bw() +
theme(legend.position = "bottom") +
theme(legend.title = element_blank()) +
guides(col = guide_legend(nrow = 1, byrow = TRUE)) +
xlab("Tiempo") +
ylab("Pasajeros") +
theme(plot.title = element_text(size = 11, face = "bold", hjust = 0)) +
theme(plot.subtitle = element_text(size = 10, hjust = 0)) +
theme(plot.caption = element_text(size = 10, hjust = 0)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
labs(
title = "Pasajeros en vuelos nacionales (Salidas)",
subtitle = "(Ene-2000 a Jun-2019)",
caption = "Fuente: Elaboración propia"
)
ggsave("Pax_Nal_f.png", width = 20, height = 15, units = "cm")
